<Window x:Class="Haley.WPF.Views.NotificationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Haley.WPF.Views"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:vm="clr-namespace:Haley.WPF.ViewModels"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="WndwHolder" Height="Auto" MinWidth="350" MaxWidth="550" MaxHeight="900" WindowStartupLocation="CenterScreen" WindowStyle="None" Background="{x:Null}" AllowsTransparency="True" SizeToContent="WidthAndHeight">
    <Window.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="bg_01" Color="#FFEEEEEE"/>
            <SolidColorBrush x:Key="shade_01" Color="#FF31303C"/>
            <SolidColorBrush x:Key="br_01" Color="#FF7E7777"/>
            <SolidColorBrush x:Key="hover_01" Color="#FF639AA6"/>
            <SolidColorBrush x:Key="hover_02" Color="#FF109540"/>
            <SolidColorBrush x:Key="disabled" Color="#FF6E706A"/>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="TextAlignment" Value="Justify"/>
                <Setter Property="Margin" Value="5"/>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="FontFamily" Value="Century Gothic" />
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Width" Value="110"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="-5" BlurRadius="5" />
                                </Border.Effect>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                      </ControlTemplate>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource hover_02}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource disabled}"/>
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Setter Property="BorderThickness" Value="1"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <sys:Boolean x:Key="False">False</sys:Boolean>
            <sys:Boolean x:Key="True">True</sys:Boolean>
        </ResourceDictionary>
    </Window.Resources>

        <Border x:Name="brdrMain" CornerRadius="10"  DataContext="{Binding}" Height="Auto" Margin="10" BorderBrush="{StaticResource br_01}" Background="{StaticResource bg_01}">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="-15" BlurRadius="10" />
            </Border.Effect>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="Auto" MinHeight="100"/>
                    <RowDefinition Height="8"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" CornerRadius="8,8,0,0"  MouseLeftButtonDown="Border_MouseLeftButtonDown" Background="{StaticResource shade_01}" >
                    <Grid x:Name="grdHeader">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="35"/>
                        </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="{Binding title, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"  FontSize="18" FontFamily="Century Gothic" />
                    <Button Grid.Column="1" Background="Transparent" Content="X" FontSize="15" FontStretch="ExtraExpanded" FontWeight="Bold" Foreground="White" Cursor="Hand" FontFamily="Comic Sans MS" Width="{Binding ElementName=grdHeader, Path=ActualHeight}" CommandParameter="{StaticResource False}" Command="{Binding cmd_close_window}" BorderBrush="Transparent" BorderThickness="0" />
                </Grid>
                </Border>
            <ContentControl DataContext="{Binding}" Content="{Binding}"  Grid.Row="1" Margin="5">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type vm:NotificationVM}">
                        <Grid>
                            <TextBlock Text="{Binding message, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" FontSize="13" />
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:ConfirmationVM}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="40"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding message, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                            <StackPanel Orientation="Horizontal" Grid.Row="1" HorizontalAlignment="Right" Margin="0,5">
                                <Button  Margin="5,0" Content="Cancel" CommandParameter="{StaticResource False}" Command="{Binding cmd_close_window}" />
                                <Button  Margin="5,0" Background="{StaticResource shade_01}" Foreground="White" Content="Accept" CommandParameter="{StaticResource True}" Command="{Binding cmd_close_window}" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:GetInputVM}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="40"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="{Binding message, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                            <Separator Grid.Row="1"/>
                            <Grid Grid.Row="2" Margin="4" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="80"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="User Value : " Foreground="{StaticResource shade_01}" FontSize="12"/>
                                <TextBox Text="{Binding input,NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2"/>
                            </Grid>
                            <StackPanel Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right" Margin="0,5">
                                <Button  Margin="5,0" Content="Cancel" CommandParameter="{StaticResource False}" Command="{Binding cmd_close_window}" />
                                <Button  Margin="5,0" Background="{StaticResource shade_01}" Foreground="White" Content="Complete" CommandParameter="{StaticResource True}" Command="{Binding cmd_send_input}" />
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ContentControl.Resources>
                
            </ContentControl>
            </Grid>
        </Border>
    </Window>
