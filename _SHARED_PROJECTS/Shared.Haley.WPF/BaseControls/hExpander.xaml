<UserControl x:Class="Haley.Wpf.BaseControls.hExpander"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:Haley.Wpf.BaseControls"
             mc:Ignorable="d" 
             d:DesignHeight="50" d:DesignWidth="100">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Haley.Library.UI;component/AppResources/Dictionaries/RD.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="Gray"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <StackPanel >
        <Border x:Name="brdrOverAll" CornerRadius="4" Height="Auto" Background="White" Margin="2">
            <Border.Effect>
                <DropShadowEffect ShadowDepth="0" BlurRadius="2"/>
            </Border.Effect>
            <StackPanel VerticalAlignment="Top">
                <Button x:Name="btnToggle" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" Click="BtnToggle_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="brdrHeaders" CornerRadius="4" Height="Auto" Background="{Binding BGHeader, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}">
                                <Grid x:Name="grdHeaders" VerticalAlignment="Top" Height="{Binding HeaderHeight, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}" Panel.ZIndex="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=grdHeaders, Path=Height}"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                    <Image x:Name="imgMain" Grid.Column="0" Source="{Binding DisplayImage, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}" Margin="2" RenderTransformOrigin="0.5,0.5" />
                                    <TextBlock x:Name="tblckPrimary" Text="{Binding PrimaryTitle, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}" Grid.Column="1" VerticalAlignment="Center" Margin="10,0" Foreground="{Binding FGHeader, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                    <WrapPanel x:Name="WpnlSecondaryTxt" Grid.Column="2" VerticalAlignment="Center" Visibility="{Binding HeaderHasControl, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged,ConverterParameter=2,Converter={StaticResource  bool_to_visibility}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}">
                                        <TextBlock x:Name="tblckSecondary" Text="{Binding SecondaryTitle, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}" Margin="10,0" Foreground="{Binding FGHeader, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                </WrapPanel>
                                    <ContentControl x:Name="CCtrlHeaderObjects" Grid.Column="2" Visibility="{Binding HeaderHasControl, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged,ConverterParameter=1,Converter={StaticResource  bool_to_visibility}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}" Content="{Binding ContentHeader, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!-- SELECTED CONDITION -->
                                <DataTrigger Binding="{Binding IsSelected, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}" Value="true">
                                    <Setter TargetName="brdrHeaders" Property="Background" Value="{Binding BGHeaderSelected, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                    <Setter TargetName="imgMain" Property="Source" Value="{Binding SelectedImage, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                    <Setter TargetName="tblckPrimary" Property="Foreground" Value="{Binding FGHeaderSelected, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                    <Setter TargetName="tblckSecondary" Property="Foreground" Value="{Binding FGHeaderSelected, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                    <Setter TargetName="brdrHeaders" Property="CornerRadius" Value="4,4,0,0"/>
                                    <Setter TargetName="imgMain" Property="RenderTransform">
                                        <Setter.Value>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="90"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <!-- MOUSE OVER -->
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="brdrHeaders" Property="Background" Value="{Binding BGHeaderHover, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                    <Setter TargetName="imgMain" Property="Source" Value="{Binding HoverImage, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                    <Setter TargetName="tblckPrimary" Property="Foreground" Value="{Binding FGHeaderHover, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                    <Setter TargetName="tblckSecondary" Property="Foreground" Value="{Binding FGHeaderHover, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <Grid x:Name="grdcontent" Height="Auto"  Width="{Binding ElementName=btnToggle, Path=ActualWidth}" Background="{Binding BGPopUp, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}" Panel.ZIndex="0" Visibility="{Binding IsSelected, ConverterParameter=1,Converter={StaticResource bool_to_visibility} ,NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}">
                    <ScrollViewer  VerticalScrollBarVisibility="Auto" CanContentScroll="True" MaxHeight="350" Height="Auto" HorizontalScrollBarVisibility="Hidden">
                    <ContentControl Content="{Binding ContentMain, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:hExpander}}}" Width="{Binding ElementName=grdcontent, Path=ActualWidth}"/>
                    </ScrollViewer>
                </Grid>
            </StackPanel>
        </Border>
    </StackPanel>

</UserControl>
